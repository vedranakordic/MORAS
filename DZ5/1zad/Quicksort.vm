function Quicksort.sort 1
push argument 1
push argument 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push argument 2
call Quicksort.partition 3
pop local 0
push argument 0
push argument 1
push local 0
push constant 1
sub
call QS.sort 3
pop temp 0
push argument 0
push local 0
push constant 1
add
push argument 2
call QS.sort 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Quicksort.partition 3
push argument 2
push argument 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
pop local 1
push argument 1
pop local 2
label WHILE_EXP0
push local 2
push argument 2
lt
not
if-goto WHILE_END0
push local 2
push argument 0
add
pop pointer 1
push that 0
push local 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push local 1
push local 2
call Quicksort.swap 3
pop temp 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push argument 0
push local 1
push argument 2
call Quicksort.swap 3
pop temp 0
push local 1
return
function Quicksort.swap 1
push argument 1
push argument 0
add
pop pointer 1
push that 0
pop local 0
push argument 1
push argument 0
add
push argument 2
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push argument 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
